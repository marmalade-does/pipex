# Main project settings
MAIN_EXECUTABLE = output
MAIN_SRC = pipex.c
MAIN_OBJ = $(MAIN_SRC:.c=.o)
MAIN_CC = gcc
MAIN_FLAGS = -Wall -Wextra -Werror -fsanitize=address -g # remove these later
LIB_DIR = ./includes
STATIC_LIB = $(LIB_DIR)/libft.a
LIB_LINK_FLAGS = -L$(LIB_DIR) -lutils # -L<path> tells the linker where to find libraries, -l<name> tells it which library to link (without the 'lib' prefix and '.a' suffix)

all: $(MAIN_EXECUTABLE)

# Rule to build the static library first
$(STATIC_LIB):
	$(MAKE) -C $(LIB_DIR)

# Rule to build the main executable, depending on the static library
$(MAIN_EXECUTABLE): $(MAIN_OBJ) $(STATIC_LIB)
	$(MAIN_CC) $(MAIN_FLAGS) -o $@ $^ $(LIB_LINK_FLAGS)

# Rule to compile the main source file
$(MAIN_OBJ): $(MAIN_SRC)
	$(MAIN_CC) $(MAIN_FLAGS) -c -o $@ $<

clean:
	$(RM) $(MAIN_OBJ)
	$(MAKE) -C $(LIB_DIR) clean

fclean: clean
	$(RM) $(MAIN_EXECUTABLE)
	$(MAKE) -C $(LIB_DIR) fclean

re: fclean all

.PHONY: all clean fclean re $(STATIC_LIB)